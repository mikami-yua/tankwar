0.1
产生一个800*600的窗口
让一个窗口显示出来：
     1.定义一个单独的Frame对象
     2.写一个类从frame继承
         第二种灵活，可以添加自己的成员变量和方法
0.2
 可以关闭窗口
 不允许窗口大小改动
 在这个frame上添加关于窗口关闭的事件，添加监听类
     1.写一个和这个class并排的类
     2.写一个内部类
     3.写一个匿名类
         匿名类的使用场合：类短小，不影响将来的扩展，不涉及重要业务逻辑

0.3
    画出可以代表坦克的实心圆

    画图：
        重写paint方法
        画实心圆需要四个参数：fillOval（x，y，w，h）
            xy是实心圆的外切正方形左上角点的位置
            w是方框的宽度，h是方块的高度

0.4
    坦克可以动：
        将位置改为变量
        启动线程不断重复
            写一个线程，每隔一段时间调用一次paint方法

            窗口启动之后就可以启动这个线程了

0.41
    使用双缓（doublebuffer）冲消除闪烁现象。
        会出现闪烁，原因：重画频率太快，paint方法还没有完成。
        解决：把所有的东西画在虚拟图片（画在内存上）上，一次性显示出来

        repain方法首先调用update（），update（）再调用paint。实际上每次重画的时候调用了update。需要在中间截掉。需要重写update方法

0.5
    代码重构：Frame的高度和宽度写为常量

0.6
    实现使用键盘对tank控制
        针对整个frame加一个对键盘的监听，处理对键盘的事件
        两种实现方式
            1.实现keylistener接口
                实现接口，里面的三个方法无论是否关心都需要实现
            2.从keyAdpater继承
                以及写了空的实现，只要写关心的方法就行了

0.7
    将坦克单独包装成类
        建立tank类
        为tank类添加成员变量xy
        添加draw方法，使tank类独立控制自己的画法
        添加tank类处理按键的方法

0.8
    tank可以在8个方向行走（处理同时按下两个键）
    原来：每按下一个键改变一次行动的方向。不便：键盘事件不均匀，移动就不均匀
    改进：每次按下后再键盘事件里只改变方向，在draw方法里根据方向改变位置。

    添加记录按键类型的布尔量
    添加代表方向的布尔量
    根据按键状态确定方向
    根据方向确定下一次的move

0.9
    按键按一下变成true，就永远使true了。
    改进：当键盘抬起来时设置为false

1.0 按下方向后，向那个方向打一发炮弹（p11）

